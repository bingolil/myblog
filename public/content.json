{"meta":{"title":"bingolil个人主页","subtitle":null,"description":null,"author":"bingolil","url":"https://bingolil.github.io"},"pages":[{"title":"","date":"2018-10-25T13:35:04.396Z","updated":"2018-10-25T13:35:04.396Z","comments":false,"path":"tags/index.html","permalink":"https://bingolil.github.io/tags/index.html","excerpt":"","text":""},{"title":"","date":"2018-10-25T13:35:04.395Z","updated":"2018-10-25T13:35:04.395Z","comments":false,"path":"categories/index.html","permalink":"https://bingolil.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"个人网页搭建流程-2","slug":"web/person-web-2","date":"2018-10-27T06:01:38.634Z","updated":"2018-10-27T06:01:38.894Z","comments":true,"path":"2018/10/27/web/person-web-2/","link":"","permalink":"https://bingolil.github.io/2018/10/27/web/person-web-2/","excerpt":"","text":"搭建本地项目hexo初始化项目进入电脑cmd命令行，在某个目录下使用hexo init命令，生成hexo初始化项目，如下图所示。 hexo init 使用hexo s命令，在浏览器中打开localhost:4000地址，可以看到hexo新建的初始化项目页面，如下图所示。 hexo init hexo主题下载新建hexo项目自带默认主题landscape，样式不是特别好看，可去hexo主题查看自己喜欢的主题风格，一般在主题风格的页面都有到该主题源码的GitHub链接，进入到GitHub下载，复制git库的地址，在本地的git命令行下 克隆hexo主题。本个人网页使用的主题地址是https://github.com/yscoder/hexo-theme-indigo 使用indigo主题将下载好的indigo主题放到本地hexo初始化项目的 ‘/项目名/themes/‘ 下，将 ‘项目名/_config.yml’ 文件中的themes属性由landscape改成indigo（如果是其它主题，themes的属性修改成其它主题名)，如下图所示。 在该主题的GitHub页面，查看使用该主题的教程，在电脑的cmd环境下跟着教程添加插件。 在cmd命令行本地项目中使用hexo s命令，打开浏览器localhost:4000地址，可以看见hexo的indigo主题被使用 修改indigo主题在本地项目中，修改 ‘indigo/_config.yml’文件，如下图所示。去掉menu中的weibo和测试 关闭打赏功能 去掉title变化功能 使用自定义样式 搭建GitHub项目使用账号登录GitHub后，进入创建仓库页面，创建仓库，仓库名为 ‘账号用户名.github.io’（这就是为什么账号的用户名是唯一的），如下图所示。 GitHub-new 打开浏览器，输入地址 ‘GitHub用户名.github.io’，可以看见如下图页面。 进入新搭建的GitHub项目的setting设置页面，有一个Git Pages属性，点击 ‘choice a theme’ 按钮，进入GitHub自带主题页面，可以更换 ‘GitHub账号.github.io’ 页面的主题，如下图所示。 将本地项目传送的GitHub上本地git和Github的连接将本地git和GitHub连接需要将本地git的公钥发送的GitHub上。官网的教程生成本地公钥。进入git bash命令行下，运行命令 ‘ssh-keygen’，在电脑的C盘里面生成了 .ssh 文件夹，如下图所示。 进入到GitHub上的添加 ssh key 的页面，如下图。 打开 id_rsa.pub 文件（该文件为公钥，id_rsa为私钥），将文件中的内容复制粘贴到上图中，点击 Add SSH key 按钮，这样本地的git和GitHub连接完成。 传送本地项目在hexo官网教材中提供了关于hexo项目的部署方案，将新建GitHub项目地址复制，在编辑器中打开本地的hexo项目，打开 ‘项目名/_config.yml’ 文件，将GitHub项目地址粘贴到 ‘_config.yml’ 文件中的 deplay 属性下的 git 属性上，如下图所示。 在电脑cmd命令到项目地址下，使用命令 ‘npm install hexo-deployer-git –save’ 下载插件，如下图所示。 然后运行 ‘hexo g -d’ 或 ‘hexo d -g’ 命令，可以看到，已经将本地git项目传送到新建的GitHub项目上，如下图所示。 打开浏览器，在地址栏输入 ‘GitHub用户名.github.io’ 可以看到，已经将本地的项目已经在GitHub上了。","categories":[{"name":"个人网页","slug":"个人网页","permalink":"https://bingolil.github.io/categories/个人网页/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://bingolil.github.io/tags/hexo/"},{"name":"git","slug":"git","permalink":"https://bingolil.github.io/tags/git/"},{"name":"github","slug":"github","permalink":"https://bingolil.github.io/tags/github/"},{"name":"node.js","slug":"node-js","permalink":"https://bingolil.github.io/tags/node-js/"}]},{"title":"个人网页搭建流程-1","slug":"web/person-web-1","date":"2018-10-27T04:42:36.618Z","updated":"2018-10-27T05:30:44.590Z","comments":true,"path":"2018/10/27/web/person-web-1/","link":"","permalink":"https://bingolil.github.io/2018/10/27/web/person-web-1/","excerpt":"","text":"需求与准备需求本人想做一个个人网页,类似于博客，数据量不大，不涉及到数据库和后台，可以做静态网页，由于个人经济所限，不会花费资金购买域名和服务器 准备根据需求，个人网页使用的域名是GitHub为每个用户提供的唯一域名(用户名.xxxx.github.io),由于个人网页类似于博客，采用hexo框架，选用hexo的主题是indigo。 需要的准备有：node.js，hexo框架，git，GitHub的账号 安装安装node.js进入英文版本的node.js官网，如果打开速度太慢，可以进入中文版本的node.js官网，根据个人电脑选择下载node.js的安装包。 node-down 点击下载后的node.js的安装包。 node-msi 然后一直跟着窗口点击，最后在电脑的cmd目录行里面验证ndoe.js是否安装成功，npm是node.js自带的包管理工具。 node-validate 安装git进入git官网下载git的安装包。 git-down 下载安装包后，点击安装包进行安装，一直跟着安装程序的提示点击下去。安装完成后，在window10自带搜索处输入git。出现下图。 git-validate 点击图中 Git Bash，出现下图，说明git安装成功。 git-cmd 安装git成功后为git设置用户名和邮箱，如下图。 安装hexo安装hexo可以查看hexo官网安装教程。在电脑的cmd命令行环境下，运行 npm install -g hexo-cli命令，电脑会自动全局安装hexo框架。安装完成后，运行 hexo -version命令，出现下图，证明hexo安装成功。 hexo-version GitHub账号进入GitHub官网首页，点击导航栏中的 Sign up 进入到注册页面（如下图），在页面中填写用户名，密码和邮箱。 github-join 注意：GitHub账号的用户名是唯一的","categories":[{"name":"个人网页","slug":"个人网页","permalink":"https://bingolil.github.io/categories/个人网页/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://bingolil.github.io/tags/hexo/"},{"name":"git","slug":"git","permalink":"https://bingolil.github.io/tags/git/"},{"name":"github","slug":"github","permalink":"https://bingolil.github.io/tags/github/"},{"name":"node.js","slug":"node-js","permalink":"https://bingolil.github.io/tags/node-js/"}]}]}